apiVersion: apps/v1
kind: Deployment
metadata:
  name: trainings-postgres # Sets Deployment name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trainings-postgres
  template:
    metadata:
      labels:
        app: trainings-postgres
    spec:
      containers:
        - name: trainings-postgres
          image: postgres:15.2 # Sets Image
          imagePullPolicy: Always
          ports:
            - containerPort: 5432 # Exposes container port
          envFrom:
            - configMapRef:
                name: trainings-postgres-config
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data
          volumeMounts:
            - mountPath: /var/lib/postgresql
              name: trainings-postgredb
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - exec pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER} -h localhost -p 5432
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          resources:
            limits:
              memory: "3Gi"
              cpu: "1000m"
      volumes:
        - name: trainings-postgredb
          persistentVolumeClaim:
            claimName: trainings-postgres-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: trainings-postgres # Sets service name
  labels:
    app: trainings-postgres # Labels and Selectors
spec:
  ports:
    - port: 5432 # Sets port to run the postgres application
  selector:
    app: trainings-postgres
